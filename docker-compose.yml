version: '3.6'
volumes:
  pritunl_data:
    driver: local
  pritunl_db:
    driver: local
networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.202.0/24

services:

  traefik:
    image: traefik:alpine
    command: --docker --api
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/acme.json:/acme.json"
      - "./traefik/traefik.toml:/traefik.toml"
    labels:
      - "traefik.docker.network=frontend"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:${TRAEFIK_DOMAIN}; PathPrefixStrip:/traefik"
      - "traefik.port=8080"
      - "traefik.protocol=http"

  certdumper:
    restart: always
    image: mailu/traefik-certdumper:$VERSION
    environment:
    # Make sure this is the same as the main=-domain in traefik.toml
    # !!! Also donâ€™t forget to add "TRAEFIK_DOMAIN=[...]" to your .env!
      - DOMAIN=$TRAEFIK_DOMAIN
    volumes:
      - "./traefik:/traefik"
      - "$ROOT/certs:/output"
    labels:
      - "traefik.enable=false"

  pritunl:
    image: 'jippi/pritunl:latest'
    privileged: true
    ports:
      - '1194:1194/udp'
      - '1194:1194/tcp'
    volumes:
      - 'pritunl_data:/var/lib/pritunl'
      - 'pritunl_db:/var/lib/mongodb'
    labels:
      - "InsecureSkipVerify=true"
     # - "traefik.passHostHeader=true"
      - 'traefik.port=443'
      - "traefik.protocol=https"
      - 'traefik.frontend.rule=Host:vpn.${TRAEFIK_DOMAIN}'

  portainer:
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
#      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - "traefik.protocol=http"
      - 'traefik.frontend.rule=Host:portainer.${TRAEFIK_DOMAIN}'

  samba:
    command: "-s \"storage;/storage;yes;no;yes;admin;admin\""
    environment:
      - USERID=1000
      - GROUPID=1000
#      - "TZ=${DOCKER_TZ}"
      - "NMBD=True"
      - "RECYCLE=False"
      - "USER=admin;admin;1001;admin"
    hostname: fileserver
    image: dperson/samba
    restart: always
    volumes:
      - "./samba:/etc/samba"
      - "/mnt/storage:/storage"
    networks:
      default:
        ipv4_address: 192.168.202.202

  front:
    image: mailu/nginx:$VERSION
    restart: always
    env_file: .env
    logging:
      driver: $LOG_DRIVER
    labels: # Traefik labels for simple reverse-proxying
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:mail.$TRAEFIK_DOMAIN"
#      - "traefik.docker.network=mailu_default"
    ports:
      - "8888:80"
      - "${BIND_ADDRESS4}:110:110"
      - "${BIND_ADDRESS4}:143:143"
      - "${BIND_ADDRESS4}:993:993"
      - "${BIND_ADDRESS4}:995:995"
      - "${BIND_ADDRESS4}:25:25"
      - "${BIND_ADDRESS4}:465:465"
      - "${BIND_ADDRESS4}:587:587"
#      - "$BIND_ADDRESS6:110:110"
#      - "$BIND_ADDRESS6:143:143"
#      - "$BIND_ADDRESS6:993:993"
#      - "$BIND_ADDRESS6:995:995"
#      - "$BIND_ADDRESS6:25:25"
#      - "$BIND_ADDRESS6:465:465"
#      - "$BIND_ADDRESS6:587:587"
    volumes:
      - "$ROOT/overrides/nginx:/overrides"
      - "$ROOT/certs:/certs"

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - "$ROOT/redis:/data"

  imap:
    image: mailu/dovecot:$VERSION
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/mail:/mail"
      - "$ROOT/overrides:/overrides"
    depends_on:
      - front

  smtp:
    image: mailu/postfix:$VERSION
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/overrides:/overrides"
    depends_on:
      - front

  antispam:
    image: mailu/rspamd:$VERSION
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/filter:/var/lib/rspamd"
      - "$ROOT/dkim:/dkim"
      - "$ROOT/overrides/rspamd:/etc/rspamd/override.d"
    depends_on:
      - front

#  antivirus:
#    image: mailu/$ANTIVIRUS:$VERSION
##    restart: always
#    env_file: .env
#    volumes:
#      - "$ROOT/filter:/data"

  webdav:
    image: mailu/$WEBDAV:$VERSION
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/dav:/data"

  admin:
    image: mailu/admin:$VERSION
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/data:/data"
      - "$ROOT/dkim:/dkim"
    depends_on:
      - redis

  webmail:
    image: "mailu/$WEBMAIL:$VERSION"
    restart: always
    env_file: .env
    volumes:
      - "$ROOT/webmail:/data"
    depends_on:
      - imap

  fetchmail:
    image: mailu/fetchmail:$VERSION
    restart: always
    env_file: .env
